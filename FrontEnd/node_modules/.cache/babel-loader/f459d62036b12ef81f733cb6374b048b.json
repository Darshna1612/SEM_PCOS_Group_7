{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createUser, loginUser } from '../../../request/userApi';\nexport default {\n  props: {\n    showBlock: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      userName: '',\n      activeTab: 'login',\n      email: '',\n      pwd: '',\n      pwdConfirm: ''\n    };\n  },\n  methods: {\n    login() {\n      const data = {\n        email: this.email,\n        password: this.pwd\n      };\n      loginUser(data).then(res => {\n        if (res.data.status === 0) {\n          this.$notify({\n            title: 'Success',\n            message: 'Log in successfully!',\n            type: 'success'\n          });\n          console.log(res.data);\n          this.$store.commit('changeEmail', this.email);\n          this.$store.commit('changeUserName', res.data.userName || '');\n          this.$router.push('./main');\n        } else if (res.data.status === 1) {\n          this.$notify({\n            title: 'Warning',\n            message: res.data.description || 'Something Went Wrong',\n            type: 'error'\n          });\n        }\n      });\n      return;\n    },\n    clickTab(tab) {\n      if (this.activeTab === tab) return;\n      this.email = '';\n      this.pwd = '';\n      this.pwdConfirm = '';\n      setTimeout(() => {\n        this.activeTab = tab;\n      }, 0);\n    },\n    handleClose() {\n      this.$emit('closeBlock');\n    },\n    register() {\n      if (this.pwd === '' || this.pwdConfirm === '' || this.email === '' || this.userName === '') {\n        this.$notify({\n          title: 'Warning',\n          message: 'Please complete all required fields!',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.pwd !== this.pwdConfirm) {\n        this.$notify({\n          title: 'Warning',\n          message: 'Password and Confirm Password are not same',\n          type: 'error'\n        });\n        return;\n      }\n      let emailRegx = new RegExp('/^[a-zA-Z0-9_-.]+@[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-]+)+$/');\n      if (!emailRegx.test(this.email)) {\n        this.$notify({\n          title: 'Warning',\n          message: 'Your Email is not correct!',\n          type: 'error'\n        });\n        return;\n      }\n      let pwdRegex = new RegExp('(?=.*[0-9])(?=.*[a-zA-Z]).{8,30}');\n      if (!pwdRegex.test(this.pwd)) {\n        this.$notify({\n          title: 'Warning',\n          message: 'Your Password is so easy!',\n          type: 'error'\n        });\n        return;\n      }\n      const data = {\n        userName: this.userName,\n        email: this.email,\n        password: this.pwd\n      };\n      createUser(data).then(res => {\n        if (res.data.status === 0) {\n          this.$notify({\n            title: 'Success',\n            message: 'Register and log in successfully!',\n            type: 'success'\n          });\n          this.$store.commit('changeEmail', this.email);\n          this.$store.commit('changeUserName', this.userName);\n          this.$router.push('./main');\n        } else if (res.data.status === 1) {\n          this.$notify({\n            title: 'Warning',\n            message: res.data.description || 'Something Went Wrong',\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAuCA;AACA;EACAA;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACAJ;QACAK;MACA;MACAC;QACA;UACA;YACAC;YACAC;YACAb;UACA;UACAc;UACA;UACA;UACA;QACA;UACA;YACAF;YACAC;YACAb;UACA;QACA;MACA;MACA;IACA;IACAe;MACA;MACA;MACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;UACAN;UACAC;UACAb;QACA;QACA;MACA;MACA;QACA;UACAY;UACAC;UACAb;QACA;QACA;MACA;MACA;MACA;QACA;UACAY;UACAC;UACAb;QACA;QACA;MACA;MACA;MACA;QACA;UACAY;UACAC;UACAb;QACA;QACA;MACA;MACA;QACAG;QACAE;QACAK;MACA;MACAS;QACA;UACA;YACAP;YACAC;YACAb;UACA;UACA;UACA;UACA;QACA;UACA;YACAY;YACAC;YACAb;UACA;QACA;MACA;IACA;EACA;AACA","names":["props","showBlock","type","default","data","userName","activeTab","email","pwd","pwdConfirm","methods","login","password","loginUser","title","message","console","clickTab","setTimeout","handleClose","register","createUser"],"sourceRoot":"src/view/login/components","sources":["LogInBlock.vue"],"sourcesContent":["<template>\n  <el-dialog \n    :visible='showBlock'\n    class='container'\n    width=\"30%\"\n    :before-close='handleClose'\n    :close-on-click-modal=false\n  >\n  <div class='tabs'>\n    <div class='tabs-item' :class='{\"selected-tab\": activeTab === \"login\"}' @click='clickTab(\"login\")'>Login</div>\n    <div class='tabs-item' :class='{\"selected-tab\": activeTab === \"register\"}' @click='clickTab(\"register\")'>Register</div>\n  </div>\n  <div class='custom-divider'></div>\n\n  <div class='login-container' v-if='activeTab ===\"login\"'>\n    <div class='item-title'>Email / Account</div>\n    <el-input v-model='email' class='item-input'></el-input>\n    <div class='item-title'>Password</div>\n    <el-input v-model='pwd' class='item-input' show-password></el-input>\n    <div class='login-btn' @click='login'>Log In</div>\n  </div>\n\n  <div class='login-container' v-if='activeTab ===\"register\"'>\n    <div class='item-title'>Input Your User Name <span style=\"color:red\">*</span></div>\n    <el-input v-model='userName' class='item-input'></el-input>\n    <div class='item-title'>Input Your Email <span style=\"color:red\">*</span></div>\n    <el-input v-model='email' class='item-input'></el-input>\n    <div class='item-title'>Input Your Password <span style=\"color:red\">*</span></div>\n    <div class='item-title'><i>Must contain letters and numbers, with a length between 6 and 30</i></div>\n    <el-input v-model='pwd' class='item-input' show-password></el-input>\n    <div class='item-title'>Confirm Your Password <span style=\"color:red\">*</span></div>\n    <el-input v-model='pwdConfirm' class='item-input' show-password></el-input>\n    <div class='login-btn' @click='register'>Register</div>\n  </div>\n\n  </el-dialog>\n</template>\n\n<script>\nimport { createUser, loginUser } from '../../../request/userApi'\nexport default {\n  props: {\n    showBlock: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      userName: '',\n      activeTab: 'login',\n      email: '',\n      pwd: '',\n      pwdConfirm: '',\n    }\n  },\n  methods: {\n    login() {\n      const data = {\n        email: this.email,\n        password: this.pwd,\n      }\n      loginUser(data).then(res => {\n        if (res.data.status === 0) {\n          this.$notify({\n            title: 'Success',\n            message: 'Log in successfully!',\n            type: 'success'\n          });\n          console.log(res.data)\n          this.$store.commit('changeEmail', this.email)\n          this.$store.commit('changeUserName', res.data.userName || '')          \n          this.$router.push('./main')\n        } else if (res.data.status === 1) {\n          this.$notify({\n            title: 'Warning',\n            message: res.data.description || 'Something Went Wrong',\n            type: 'error'\n          })\n        }\n      })\n      return\n    },\n    clickTab(tab) {\n      if (this.activeTab === tab) return\n      this.email = ''\n      this.pwd = ''\n      this.pwdConfirm = ''\n      setTimeout(() => {\n        this.activeTab = tab;\n      }, 0)\n    },\n    handleClose() {\n      this.$emit('closeBlock')\n    },\n    register() {\n      if (this.pwd === '' || this.pwdConfirm === '' || this.email === '' || this.userName === '') {\n        this.$notify({\n          title: 'Warning',\n          message: 'Please complete all required fields!',\n          type: 'error'\n        })\n        return\n      }\n      if (this.pwd !== this.pwdConfirm) {\n        this.$notify({\n          title: 'Warning',\n          message: 'Password and Confirm Password are not same',\n          type: 'error'\n        })\n        return\n      }\n      let emailRegx = new RegExp('/^[a-zA-Z0-9_-.]+@[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-]+)+$/');\n      if (!emailRegx.test(this.email)) {\n        this.$notify({\n          title: 'Warning',\n          message: 'Your Email is not correct!',\n          type: 'error'\n        })\n        return\n      }\n      let pwdRegex = new RegExp('(?=.*[0-9])(?=.*[a-zA-Z]).{8,30}');\n      if (!pwdRegex.test(this.pwd)) {\n        this.$notify({\n          title: 'Warning',\n          message: 'Your Password is so easy!',\n          type: 'error'\n        })\n        return\n      }\n      const data = {\n        userName: this.userName,\n        email: this.email,\n        password: this.pwd,\n      }\n      createUser(data).then(res => {\n        if (res.data.status === 0) {\n          this.$notify({\n            title: 'Success',\n            message: 'Register and log in successfully!',\n            type: 'success'\n          });\n          this.$store.commit('changeEmail', this.email)\n          this.$store.commit('changeUserName', this.userName)\n          this.$router.push('./main')\n        } else if (res.data.status === 1) {\n          this.$notify({\n            title: 'Warning',\n            message: res.data.description || 'Something Went Wrong',\n            type: 'error'\n          })\n        }\n      })\n    }\n  }\n}\n\n</script>\n<style scoped>\n.container {\n}\n.tabs {\n  display: flex;\n}\n.tabs-item {\n  text-align: left;\n  width: fit-content;\n  font-size: 16px;\n  cursor: pointer;\n  margin-right: 20px;\n}\n.selected-tab {\n  font-weight: bold;\n  border-bottom: 5px solid rgba(50, 115, 197, 0.6);\n}\n.custom-divider {\n  width: 100%;\n  background-color: rgba(238, 238, 238, 1);\n  height: 1px;\n}\n.login-container {\n  text-align: left;\n  box-sizing: border-box;\n}\n.item-title {\n  text-align: left;\n  color: #666;\n  font-weight: 400;\n  font-size: 12px;\n  margin: 10px 0;\n}\n.item-input {\n  padding-left: 0;\n  /* width: 80%; */\n}\n.login-btn {\n  width: 189px;\n  height: 48px;\n\n  background: #404040;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  margin: 20px auto 0;\n\n  text-align: center;\n  font-size: 16px;\n  color: white;\n  line-height: 48px;\n  font-weight: bold;\n\n  cursor: pointer;\n}\n</style>"]},"metadata":{},"sourceType":"module"}