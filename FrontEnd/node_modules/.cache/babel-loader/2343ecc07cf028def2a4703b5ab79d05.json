{"ast":null,"code":"import { examineUser } from '../../../request/testApi';\nexport default {\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: false\n    },\n    BMI: {\n      type: [Number, String],\n      default: ''\n    },\n    weight: {\n      type: [Number, String],\n      default: ''\n    },\n    weightGain: {\n      type: [Number, String, Boolean],\n      default: ''\n    },\n    menstrualCycle: {\n      type: [Number, String],\n      default: ''\n    }\n  },\n  watch: {\n    isEditing: {\n      handler(newValue) {\n        if (newValue) {\n          this.obj = {\n            BMI: this.BMI,\n            weightGain: this.weightGain,\n            menstrualCycle: this.menstrualCycle\n          };\n        }\n      }\n    }\n  },\n  data() {\n    return {\n      obj: {\n        BMI: 0,\n        weightGain: 0,\n        menstrualCycle: 0\n      },\n      fullscreenLoading: false\n    };\n  },\n  methods: {\n    handleClose() {\n      this.$emit('closeBlock');\n    },\n    handleSubmit() {\n      this.fullscreenLoading = true;\n      examineUser({\n        ...this.obj,\n        timeStamp: new Date().getTime(),\n        email: this.$store.state.email\n      }).then(res => {\n        console.log(res);\n        this.fullscreenLoading = false;\n        this.obj.result = res.data.examine_result;\n        this.$emit('submitEditData', this.obj);\n        this.$emit('closeBlock');\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA8DA;AACA;EACAA;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;IACAE;MACAH;MACAC;IACA;IACAG;MACAJ;MACAC;IACA;IACAI;MACAL;MACAC;IACA;EACA;EACAK;IACAP;MACAQ;QACA;UACA;YACAL;YACAE;YACAC;UACA;QACA;MACA;IACA;EACA;EACAG;IACA;MACAC;QACAP;QACAE;QACAC;MACA;MACAK;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACAC;QACA;QACAC;QACAC;MACA;QACAC;QACA;QACA;QACA;QACA;MACA;IAEA;EACA;AACA","names":["props","isEditing","type","default","BMI","weight","weightGain","menstrualCycle","watch","handler","data","obj","fullscreenLoading","methods","handleClose","handleSubmit","examineUser","timeStamp","email","console"],"sourceRoot":"src/view/dashboard/components","sources":["EditBlock.vue"],"sourcesContent":["<template>\n  <el-dialog \n    :visible='isEditing'\n    class='edit-block-container'\n    width=\"30%\"\n    :before-close='handleClose'\n  >\n    <div\n      v-loading=\"fullscreenLoading\"\n      element-loading-text=\"Your result will appear in seconds...\"\n    >\n      <el-form :model=\"obj\" label-width=\"30%\">\n        <el-form-item label=\"BMI\" prop=\"BMI\">\n          <el-input v-model='obj.BMI' class='edit-block-item-input'></el-input>\n        </el-form-item>\n        <el-form-item label=\"Weight\" prop=\"weight\">\n          <el-input v-model='obj.weight' class='edit-block-item-input'></el-input>\n        </el-form-item>\n        <el-form-item label=\"Weight Gain\" prop=\"weightGain\">\n          <!-- <el-input v-model='obj.weight' class='edit-block-item-input'></el-input> -->\n          <el-radio-group>\n            <el-radio v-model=\"obj.weight\" label=\"0\">False</el-radio>\n            <el-radio v-model=\"obj.weight\" label=\"1\">True</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"Menstrual Cycle\" prop=\"menstrualCycle\">\n          <el-input v-model='obj.menstrualCycle' class='edit-block-item-input'></el-input>\n        </el-form-item>\n      </el-form> \n      <!-- <div class='edit-block-item-container'>\n        <div class='edit-block-item-title'>BMI</div>\n        <el-input v-model='obj.BMI' class='edit-block-item-input'></el-input>\n      </div>\n      <div class='edit-block-item-container'>\n        <div class='edit-block-item-title'>Weight</div>\n        <el-input v-model='obj.weight' class='edit-block-item-input'></el-input>\n      </div>\n      <div class='edit-block-item-container'>\n        <div class='edit-block-item-title'>Weight Gain</div>\n        <el-input \n          v-model='obj.weightGain' \n          class='edit-block-item-input'\n          placeholder=\"Enter 1 if you gained weight, 0 if you didn't gain weight\"  \n        >\n        </el-input>\n      </div>\n      <div class='edit-block-item-container'>\n        <div class='edit-block-item-title'>Menstrual Cycle</div>\n        <el-input v-model='obj.menstrualCycle' class='edit-block-item-input'></el-input>\n      </div> -->\n\n      <div class='edit-block-custom-divider'></div>\n\n      <div class='edit-block-button-area'>\n        <div class='edit-block-btn edit-block-confirm-btn' @click='handleSubmit'>Confirm</div>\n        <div class='edit-block-btn edit-block-cancel-btn' @click='handleClose'>Cancel</div>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { examineUser } from '../../../request/testApi'\nexport default {\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: false\n    },\n    BMI: {\n      type: [Number, String],\n      default: '',\n    },\n    weight: {\n      type: [Number, String],\n      default: '',\n    },\n    weightGain: {\n      type: [Number, String, Boolean],\n      default: '',\n    },\n    menstrualCycle: {\n      type: [Number, String],\n      default: '',\n    },\n  },\n  watch: {\n    isEditing: {\n      handler(newValue) {\n        if (newValue) {\n          this.obj = {\n            BMI: this.BMI,\n            weightGain: this.weightGain,\n            menstrualCycle: this.menstrualCycle,\n          }\n        }\n      }\n    }\n  },\n  data() {\n    return {\n      obj: {\n        BMI: 0,\n        weightGain: 0,\n        menstrualCycle: 0,\n      },\n      fullscreenLoading: false\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('closeBlock');\n    },\n    handleSubmit() {\n      this.fullscreenLoading = true;\n      examineUser({\n        ...this.obj,\n        timeStamp: new Date().getTime(),\n        email: this.$store.state.email\n      }).then(res => {\n        console.log(res)\n        this.fullscreenLoading = false;\n        this.obj.result = res.data.examine_result;\n        this.$emit('submitEditData', this.obj);\n        this.$emit('closeBlock');\n      })\n      \n    }\n  }\n}\n</script>\n\n<style>\n.edit-block-container {\n  padding: 0;\n}\n.edit-block-item-container {\n  width: 100%;\n  display: flex;\n  margin-bottom: 20px;\n}\n.edit-block-item-title {\n  width: 30%;\n  line-height: 40px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.edit-block-item-input {\n  width: 90%;\n}\n\n.edit-block-custom-divider {\n  width: 90%;\n\theight: 2px;\n\tbackground-color: #EEEEEE;\n\tmargin: 20px auto 10px;\n}\n\n.edit-block-button-area {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: -10px;\n}\n\n.edit-block-btn {\n  width: 100px;\n  margin-right: 20px;\n  height: 40px;\n  background: rgba(50, 115, 197, 0.8);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\tborder-radius: 10px;\n\n  color: white;\n  /* font-weight: bold; */\n  font-size: 18px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  line-height: 40px;\n\n  cursor: pointer;\n}\n\n.edit-block-cancel-btn {\n  background-color: #E6A23C;\n}\n\n.el-loading-spinner {\n  top: 30%!important;\n}\n</style>"]},"metadata":{},"sourceType":"module"}