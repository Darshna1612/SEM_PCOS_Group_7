{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts';\nimport { getExamineHistory } from '@/request/testApi';\nimport { getTime } from '@/utils/utils';\nexport default {\n  mounted() {\n    getExamineHistory().then(res => {\n      this.historyData = res.data;\n      this.getCharts();\n    });\n  },\n  data() {\n    return {\n      historyData: [],\n      itemNumber: 7\n    };\n  },\n  computed: {\n    chartData() {\n      const data = [];\n      this.historyData.forEach(d => {\n        data.push(Number((100 * Number(d.result)).toFixed(1)));\n      });\n      return data.slice(Math.max(0, data.length - this.itemNumber), data.length);\n    },\n    chartDateData() {\n      const data = [];\n      this.historyData.forEach(d => {\n        data.push(getTime(d.timeStamp));\n      });\n      return data.slice(Math.max(0, data.length - this.itemNumber), data.length);\n    }\n  },\n  methods: {\n    getCharts() {\n      const chart = this.$refs.chart;\n      const myChart = echarts.init(chart);\n      myChart.setOption({\n        width: 'auto',\n        xAxis: {\n          type: 'category',\n          data: this.chartDateData\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.chartData,\n          type: 'bar',\n          showBackground: true,\n          backgroundStyle: {\n            color: 'rgba(180, 180, 180, 0.2)'\n          }\n        }]\n      });\n    }\n  },\n  components: {}\n};","map":{"version":3,"mappings":";AAUA;AACA;AACA;AACA;EACAA;IACAC,oBACAC;MACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;QACAJ;MACA;MACA;IACA;IACAK;MACA;MACA;QACAL;MACA;MACA;IACA;EACA;EACAM;IACAC;MACA;MACA;MACAC;QACAC;QACAC;UACAC;UACAX;QACA;QACAY;UACAD;QACA;QACAE,SACA;UACAb;UACAW;UACAG;UACAC;YACAC;UACA;QACA;MAEA;IACA;EACA;EACAC,aACA;AACA","names":["mounted","getExamineHistory","then","data","historyData","itemNumber","computed","chartData","chartDateData","methods","getCharts","myChart","width","xAxis","type","yAxis","series","showBackground","backgroundStyle","color","components"],"sourceRoot":"src/view/history","sources":["HistoryBoard.vue"],"sourcesContent":["<template>\n  <el-row class='history-container'>\n\t\t\t<el-col :span='15' class='chart-container'>\n\t\t\t\t<div ref='chart' style='width: 100%; height: 80%;'></div>\n\t\t\t</el-col>\n\t\t\t<el-col :span='9'></el-col>\n\t</el-row>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport { getExamineHistory } from '@/request/testApi';\nimport { getTime } from '@/utils/utils'\nexport default {\n\tmounted(){\n\t\tgetExamineHistory()\n\t\t.then(res => {\n\t\t\tthis.historyData = res.data\n\t\t\tthis.getCharts()\n\t\t})\n\t},\n\tdata() {\n\t\treturn {\n\t\t\thistoryData: [],\n\t\t\titemNumber: 7,\n\t\t}\n\t},\n\tcomputed: {\n\t\tchartData() {\n\t\t\tconst data = []\n\t\t\tthis.historyData.forEach(d => {\n\t\t\t\tdata.push(Number((100 * Number(d.result)).toFixed(1)))\n\t\t\t})\n\t\t\treturn data.slice(Math.max(0, data.length - this.itemNumber), data.length)\n\t\t},\n\t\tchartDateData() {\n\t\t\tconst data = []\n\t\t\tthis.historyData.forEach(d => {\n\t\t\t\tdata.push(getTime(d.timeStamp))\n\t\t\t})\n\t\t\treturn data.slice(Math.max(0, data.length - this.itemNumber), data.length)\n\t\t}\n\t},\n\tmethods: {\n\t\tgetCharts() {\n\t\t\tconst chart = this.$refs.chart\n\t\t\tconst myChart = echarts.init(chart)\n\t\t\tmyChart.setOption({\n\t\t\t\twidth: 'auto',\n        xAxis: {\n          type: 'category',\n          data: this.chartDateData\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: this.chartData,\n            type: 'bar',\n            showBackground: true,\n            backgroundStyle: {\n              color: 'rgba(180, 180, 180, 0.2)'\n            }\n          }\n        ]\n      });\n\t\t}\n\t},\n\tcomponents: {\n  }\n}\n\n</script>\n\n<style scoped>\n.history-container {\n\tbox-sizing: border-box;\n\tmargin: 40px auto;\n\tpadding: 20px;\n\theight: 90%;\n\twidth: 90%;\n\tbackground: #FFF;\n\tborder: 1px solid #EEEEEE;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n}\n\n.chart-container {\n\theight: 100%;\n\tborder-right: 1px #EEE solid;\n}\n</style>"]},"metadata":{},"sourceType":"module"}